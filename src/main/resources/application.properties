# NOTE ilker default port for the built in app server to steart is 8080
#server.port=8889
# HTTPS port below
server.port=8890

spring.h2.console.enabled=true
spring.h2.console.path=/h2_console
spring.datasource.url=jdbc:h2:file:~/h2/testdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver

#spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# NOTE ilker hibernate generates&executes below schema SQL 
# Hibernate: drop table customer if exists
# Hibernate: drop sequence if exists hibernate_sequence
# Hibernate: create sequence hibernate_sequence start with 1 increment by 1
# Hibernate: create table customer (id bigint not null, firstname varchar(255), lastname varchar(255), primary key (id))

# NOTE ilker "user" is the default user.name for "spring security default configuration"
#spring.security.user.name=user
# NOTE ilker with "spring security default configuration", by default a random password is generated and printed in log statement in console. But it can be fixed like below
#spring.security.user.password=user

## HTTPS SSL certificate param values - NOTE ilker they need match what you used during generation of certificate (see README)
server.ssl.enabled=true
server.ssl.key-store=src/main/resources/certificates4https/exp17d.p12
server.ssl.key-store-password=password
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=exp17d

# BEF my application specific "value"s
#mh.security.authserver.addRolesAsGrantedAuthority2privileges=true

#NOTE ilker starting with Spring 5, which spring-boot-starter-parent 2.x uses, have to use a password encoder 
#     otherwise password check will fail with below WARN message in logs (console)
#     WARN BCryptPasswordEncoder "Encoded password does not look like BCrypt"
#     So when spring-boot-starter-parent version is 2.x, then make sure to set below "mh.security.authserver.BCryptPasswordEncoder.usedToEncodePassword=true" in application.properties
mh.security.authserver.BCryptPasswordEncoder.usedToEncodePassword=true
mh.security.authserver.BCryptPasswordEncoder.strength=10

#mh.security.authserver.jwt.privateKeyResourcePath=rsaKey/rsaKey4jwtRS256.key.private
#mh.security.authserver.jwt.publicKeyResourcePath=rsaKey/rsaKey4jwtRS256.key.public

# jwt token creation specific params
#mh.security.authserver.jwt.clientId=MhWebJwtClientId
#mh.security.authserver.jwt.clientSecret=MhSecret
#mh.security.authserver.jwt.accessTokenValiditySeconds=20000
#mh.security.authserver.jwt.refreshTokenValiditySeconds=20000

# EOF my application specific "value"s

